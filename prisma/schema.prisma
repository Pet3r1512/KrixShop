generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentMethod {
  CASH
  TRANSFER
  MOMO
  COD
}

enum OrderStatus {
  CONFIRMED
  ONSHIP
  COMPLETED
  ERROR
}

enum CustomerRank {
  MEMBER
  GOLD
  PLATINUM
  DIAMOND
}

model Categories {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  image          String
  xata_id        String   @unique(map: "Categories__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
}

model Products {
  id             Int            @id @default(autoincrement())
  product_name   String         @unique
  price          Int
  category       String
  class          String
  color          String[]
  image          String         @unique
  description    String
  rated          Int
  reviews        Int
  quantity       Int
  xata_id        String         @unique(map: "Products__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int            @default(0)
  xata_createdat DateTime       @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime       @default(now()) @db.Timestamptz(6)
  type           String
  clothes_size   String?
  footwear_size  String?
  saleoff        Int?
  color_quantity ProductColor[]

  orderDetails OrderDetails[] @relation("ProductToOrderDetails")
}

model ProductColor {
  id             Int      @id @default(autoincrement())
  productId      Int
  color          String
  quantity       Int
  xata_id        String   @unique(map: "ProductColor__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  product        Products @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, color])
}

model Vocher {
  id          String   @id
  voucherCode String
  validAt     DateTime
  expiredAt   DateTime
  quantiy     Int
  discount    Int
}

model Customer {
  id     String       @id
  name   String
  rank   CustomerRank
  point  Int
  orders Orders[]     @relation("CustomerToOrder")
}

model Orders {
  orderId       String         @id
  customerId    String
  total         Int
  items         Int
  orderDate     DateTime
  address       String
  shipDate      DateTime
  shipCost      Int
  voucher       String?
  paymentMethod PaymentMethod
  status        OrderStatus
  orderDetails  OrderDetails[] @relation("OrderToOrderDetails")
  customer      Customer       @relation(fields: [customerId], references: [id], name: "CustomerToOrder")
}

model OrderDetails {
  orderDetailId String   @id
  orderId       String
  unitId        String
  quantity      Int
  unitPrice     Int
  totalPrice    Int
  order         Orders   @relation(fields: [orderId], references: [orderId], name: "OrderToOrderDetails")
  product       Products @relation(fields: [unitId], references: [xata_id], name: "ProductToOrderDetails")
}
